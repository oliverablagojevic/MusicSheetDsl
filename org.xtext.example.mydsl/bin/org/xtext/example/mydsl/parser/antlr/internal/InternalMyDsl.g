/*
 * generated by Xtext 2.21.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Composition";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleComposition
entryRuleComposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositionRule()); }
	iv_ruleComposition=ruleComposition
	{ $current=$iv_ruleComposition.current; }
	EOF;

// Rule Composition
ruleComposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompositionAccess().getCompositionAction_0(),
					$current);
			}
		)
		otherlv_1='Composition'
		{
			newLeafNode(otherlv_1, grammarAccess.getCompositionAccess().getCompositionKeyword_1());
		}
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getCompositionAccess().getLeftSquareBracketKeyword_2());
		}
		(
			otherlv_3='name:'
			{
				newLeafNode(otherlv_3, grammarAccess.getCompositionAccess().getNameKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getNameEStringParserRuleCall_3_1_0());
					}
					lv_name_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"name",
							lv_name_4_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='author:'
			{
				newLeafNode(otherlv_5, grammarAccess.getCompositionAccess().getAuthorKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getAuthorEStringParserRuleCall_4_1_0());
					}
					lv_author_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"author",
							lv_author_6_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='instrument:'
			{
				newLeafNode(otherlv_7, grammarAccess.getCompositionAccess().getInstrumentKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getInstrumentEStringParserRuleCall_5_1_0());
					}
					lv_instrument_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"instrument",
							lv_instrument_8_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='tonality:'
			{
				newLeafNode(otherlv_9, grammarAccess.getCompositionAccess().getTonalityKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getTonalityEStringParserRuleCall_6_1_0());
					}
					lv_tonality_10_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"tonality",
							lv_tonality_10_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='soundTempo:'
			{
				newLeafNode(otherlv_11, grammarAccess.getCompositionAccess().getSoundTempoKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getSoundTempoEIntParserRuleCall_7_1_0());
					}
					lv_soundTempo_12_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"soundTempo",
							lv_soundTempo_12_0,
							"org.xtext.example.mydsl.MyDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getBracketBracketParserRuleCall_8_0_0());
					}
					lv_bracket_13_0=ruleBracket
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						add(
							$current,
							"bracket",
							lv_bracket_13_0,
							"org.xtext.example.mydsl.MyDsl.Bracket");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getCompositionAccess().getCommaKeyword_8_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCompositionAccess().getBracketBracketParserRuleCall_8_1_1_0());
						}
						lv_bracket_15_0=ruleBracket
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompositionRule());
							}
							add(
								$current,
								"bracket",
								lv_bracket_15_0,
								"org.xtext.example.mydsl.MyDsl.Bracket");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getStaffStaffParserRuleCall_9_0_0());
					}
					lv_staff_16_0=ruleStaff
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						add(
							$current,
							"staff",
							lv_staff_16_0,
							"org.xtext.example.mydsl.MyDsl.Staff");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_17=','
				{
					newLeafNode(otherlv_17, grammarAccess.getCompositionAccess().getCommaKeyword_9_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCompositionAccess().getStaffStaffParserRuleCall_9_1_1_0());
						}
						lv_staff_18_0=ruleStaff
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompositionRule());
							}
							add(
								$current,
								"staff",
								lv_staff_18_0,
								"org.xtext.example.mydsl.MyDsl.Staff");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_19=']'
		{
			newLeafNode(otherlv_19, grammarAccess.getCompositionAccess().getRightSquareBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleStaffElement
entryRuleStaffElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStaffElementRule()); }
	iv_ruleStaffElement=ruleStaffElement
	{ $current=$iv_ruleStaffElement.current; }
	EOF;

// Rule StaffElement
ruleStaffElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStaffElementAccess().getRestParserRuleCall_0());
		}
		this_Rest_0=ruleRest
		{
			$current = $this_Rest_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStaffElementAccess().getAccidentalParserRuleCall_1());
		}
		this_Accidental_1=ruleAccidental
		{
			$current = $this_Accidental_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStaffElementAccess().getRepetitionParserRuleCall_2());
		}
		this_Repetition_2=ruleRepetition
		{
			$current = $this_Repetition_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStaffElementAccess().getNoteParserRuleCall_3());
		}
		this_Note_3=ruleNote
		{
			$current = $this_Note_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBracket
entryRuleBracket returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBracketRule()); }
	iv_ruleBracket=ruleBracket
	{ $current=$iv_ruleBracket.current; }
	EOF;

// Rule Bracket
ruleBracket returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBracketAccess().getBracketAction_0(),
					$current);
			}
		)
		otherlv_1='Bracket'
		{
			newLeafNode(otherlv_1, grammarAccess.getBracketAccess().getBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBracketAccess().getTypeBracketTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=ruleBracketType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBracketRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyDsl.BracketType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBracketAccess().getStavesStaffParserRuleCall_3_0());
				}
				lv_staves_3_0=ruleStaff
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBracketRule());
					}
					add(
						$current,
						"staves",
						lv_staves_3_0,
						"org.xtext.example.mydsl.MyDsl.Staff");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getBracketAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBracketAccess().getStavesStaffParserRuleCall_4_1_0());
					}
					lv_staves_5_0=ruleStaff
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBracketRule());
						}
						add(
							$current,
							"staves",
							lv_staves_5_0,
							"org.xtext.example.mydsl.MyDsl.Staff");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleStaff
entryRuleStaff returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStaffRule()); }
	iv_ruleStaff=ruleStaff
	{ $current=$iv_ruleStaff.current; }
	EOF;

// Rule Staff
ruleStaff returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStaffAccess().getStaffAction_0(),
					$current);
			}
		)
		otherlv_1='Staff'
		{
			newLeafNode(otherlv_1, grammarAccess.getStaffAccess().getStaffKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStaffAccess().getNumberEIntParserRuleCall_2_0());
				}
				lv_number_2_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStaffRule());
					}
					set(
						$current,
						"number",
						lv_number_2_0,
						"org.xtext.example.mydsl.MyDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getStaffAccess().getLeftSquareBracketKeyword_3());
		}
		otherlv_4='Clef:'
		{
			newLeafNode(otherlv_4, grammarAccess.getStaffAccess().getClefKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStaffAccess().getClefClefParserRuleCall_5_0());
				}
				lv_clef_5_0=ruleClef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStaffRule());
					}
					set(
						$current,
						"clef",
						lv_clef_5_0,
						"org.xtext.example.mydsl.MyDsl.Clef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='timeSignature:'
		{
			newLeafNode(otherlv_6, grammarAccess.getStaffAccess().getTimeSignatureKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStaffAccess().getTimeTimeSignatureParserRuleCall_7_0());
				}
				lv_time_7_0=ruleTimeSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStaffRule());
					}
					set(
						$current,
						"time",
						lv_time_7_0,
						"org.xtext.example.mydsl.MyDsl.TimeSignature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='elements'
		{
			newLeafNode(otherlv_8, grammarAccess.getStaffAccess().getElementsKeyword_8());
		}
		otherlv_9='['
		{
			newLeafNode(otherlv_9, grammarAccess.getStaffAccess().getLeftSquareBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStaffAccess().getElementsStaffElementParserRuleCall_10_0());
				}
				lv_elements_10_0=ruleStaffElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStaffRule());
					}
					add(
						$current,
						"elements",
						lv_elements_10_0,
						"org.xtext.example.mydsl.MyDsl.StaffElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getStaffAccess().getCommaKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStaffAccess().getElementsStaffElementParserRuleCall_11_1_0());
					}
					lv_elements_12_0=ruleStaffElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStaffRule());
						}
						add(
							$current,
							"elements",
							lv_elements_12_0,
							"org.xtext.example.mydsl.MyDsl.StaffElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_13=']'
		{
			newLeafNode(otherlv_13, grammarAccess.getStaffAccess().getRightSquareBracketKeyword_12());
		}
		otherlv_14=']'
		{
			newLeafNode(otherlv_14, grammarAccess.getStaffAccess().getRightSquareBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleClef
entryRuleClef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClefRule()); }
	iv_ruleClef=ruleClef
	{ $current=$iv_ruleClef.current; }
	EOF;

// Rule Clef
ruleClef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getClefAccess().getClefAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClefAccess().getTypeClefTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleClefType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClefRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl.MyDsl.ClefType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTimeSignature
entryRuleTimeSignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeSignatureRule()); }
	iv_ruleTimeSignature=ruleTimeSignature
	{ $current=$iv_ruleTimeSignature.current; }
	EOF;

// Rule TimeSignature
ruleTimeSignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='beat'
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeSignatureAccess().getBeatKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeSignatureAccess().getBeatEIntParserRuleCall_1_0());
				}
				lv_beat_1_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeSignatureRule());
					}
					set(
						$current,
						"beat",
						lv_beat_1_0,
						"org.xtext.example.mydsl.MyDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='beatType'
		{
			newLeafNode(otherlv_2, grammarAccess.getTimeSignatureAccess().getBeatTypeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeSignatureAccess().getBeatTypeEIntParserRuleCall_3_0());
				}
				lv_beatType_3_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeSignatureRule());
					}
					set(
						$current,
						"beatType",
						lv_beatType_3_0,
						"org.xtext.example.mydsl.MyDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRest
entryRuleRest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestRule()); }
	iv_ruleRest=ruleRest
	{ $current=$iv_ruleRest.current; }
	EOF;

// Rule Rest
ruleRest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRestAccess().getRestAction_0(),
					$current);
			}
		)
		otherlv_1='rest:'
		{
			newLeafNode(otherlv_1, grammarAccess.getRestAccess().getRestKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRestAccess().getTypeRestTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=ruleRestType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRestRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyDsl.RestType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleAccidental
entryRuleAccidental returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAccidentalRule()); }
	iv_ruleAccidental=ruleAccidental
	{ $current=$iv_ruleAccidental.current; }
	EOF;

// Rule Accidental
ruleAccidental returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAccidentalAccess().getAccidentalAction_0(),
					$current);
			}
		)
		otherlv_1='accidental:'
		{
			newLeafNode(otherlv_1, grammarAccess.getAccidentalAccess().getAccidentalKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAccidentalAccess().getTypeAccidentalTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=ruleAccidentalType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAccidentalRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyDsl.AccidentalType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAccidentalAccess().getPositionEIntParserRuleCall_3_0());
				}
				lv_position_3_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAccidentalRule());
					}
					set(
						$current,
						"position",
						lv_position_3_0,
						"org.xtext.example.mydsl.MyDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRepetition
entryRuleRepetition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepetitionRule()); }
	iv_ruleRepetition=ruleRepetition
	{ $current=$iv_ruleRepetition.current; }
	EOF;

// Rule Repetition
ruleRepetition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRepetitionAccess().getRepetitionAction_0(),
					$current);
			}
		)
		otherlv_1='repetition:'
		{
			newLeafNode(otherlv_1, grammarAccess.getRepetitionAccess().getRepetitionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRepetitionAccess().getTypeRepetitionTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=ruleRepetitionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepetitionRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyDsl.RepetitionType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleNote
entryRuleNote returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNoteRule()); }
	iv_ruleNote=ruleNote
	{ $current=$iv_ruleNote.current; }
	EOF;

// Rule Note
ruleNote returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNoteAccess().getNoteAction_0(),
					$current);
			}
		)
		otherlv_1='note:'
		{
			newLeafNode(otherlv_1, grammarAccess.getNoteAccess().getNoteKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNoteAccess().getNameNoteNameEnumRuleCall_2_0());
				}
				lv_name_2_0=ruleNoteName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNoteRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl.MyDsl.NoteName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='lyrics:'
			{
				newLeafNode(otherlv_3, grammarAccess.getNoteAccess().getLyricsKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNoteAccess().getLyricsEStringParserRuleCall_3_1_0());
					}
					lv_lyrics_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoteRule());
						}
						set(
							$current,
							"lyrics",
							lv_lyrics_4_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='duration:'
			{
				newLeafNode(otherlv_5, grammarAccess.getNoteAccess().getDurationKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNoteAccess().getDurationNoteDurationEnumRuleCall_4_1_0());
					}
					lv_duration_6_0=ruleNoteDuration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoteRule());
						}
						set(
							$current,
							"duration",
							lv_duration_6_0,
							"org.xtext.example.mydsl.MyDsl.NoteDuration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='position:'
			{
				newLeafNode(otherlv_7, grammarAccess.getNoteAccess().getPositionKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNoteAccess().getPositionEIntParserRuleCall_5_1_0());
					}
					lv_position_8_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoteRule());
						}
						set(
							$current,
							"position",
							lv_position_8_0,
							"org.xtext.example.mydsl.MyDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='dynamic:'
			{
				newLeafNode(otherlv_9, grammarAccess.getNoteAccess().getDynamicKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNoteAccess().getDynamicEStringParserRuleCall_6_1_0());
					}
					lv_dynamic_10_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoteRule());
						}
						set(
							$current,
							"dynamic",
							lv_dynamic_10_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNoteAccess().getOrnamentOrnamentParserRuleCall_7_0());
				}
				lv_ornament_11_0=ruleOrnament
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNoteRule());
					}
					set(
						$current,
						"ornament",
						lv_ornament_11_0,
						"org.xtext.example.mydsl.MyDsl.Ornament");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNoteAccess().getAccidentalAccidentalParserRuleCall_8_0());
				}
				lv_accidental_12_0=ruleAccidental
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNoteRule());
					}
					set(
						$current,
						"accidental",
						lv_accidental_12_0,
						"org.xtext.example.mydsl.MyDsl.Accidental");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNoteAccess().getArticulationArticulationParserRuleCall_9_0());
				}
				lv_articulation_13_0=ruleArticulation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNoteRule());
					}
					set(
						$current,
						"articulation",
						lv_articulation_13_0,
						"org.xtext.example.mydsl.MyDsl.Articulation");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_fermata_14_0='fermata'
				{
					newLeafNode(lv_fermata_14_0, grammarAccess.getNoteAccess().getFermataFermataKeyword_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNoteRule());
					}
					setWithLastConsumed($current, "fermata", true, "fermata");
				}
			)
		)?
		(
			(
				lv_dot_15_0='dot'
				{
					newLeafNode(lv_dot_15_0, grammarAccess.getNoteAccess().getDotDotKeyword_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNoteRule());
					}
					setWithLastConsumed($current, "dot", true, "dot");
				}
			)
		)?
	)
;

// Entry rule entryRuleOrnament
entryRuleOrnament returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrnamentRule()); }
	iv_ruleOrnament=ruleOrnament
	{ $current=$iv_ruleOrnament.current; }
	EOF;

// Rule Ornament
ruleOrnament returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOrnamentAccess().getOrnamentAction_0(),
					$current);
			}
		)
		otherlv_1='ornament:'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrnamentAccess().getOrnamentKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrnamentAccess().getTypeOrnamentTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=ruleOrnamentType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrnamentRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyDsl.OrnamentType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleArticulation
entryRuleArticulation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArticulationRule()); }
	iv_ruleArticulation=ruleArticulation
	{ $current=$iv_ruleArticulation.current; }
	EOF;

// Rule Articulation
ruleArticulation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArticulationAccess().getArticulationAction_0(),
					$current);
			}
		)
		otherlv_1='articulation:'
		{
			newLeafNode(otherlv_1, grammarAccess.getArticulationAccess().getArticulationKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArticulationAccess().getTypeArticulationTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=ruleArticulationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArticulationRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyDsl.ArticulationType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Rule BracketType
ruleBracketType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='curly'
			{
				$current = grammarAccess.getBracketTypeAccess().getCurlyEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBracketTypeAccess().getCurlyEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='square'
			{
				$current = grammarAccess.getBracketTypeAccess().getSquareEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBracketTypeAccess().getSquareEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule RestType
ruleRestType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='whole'
			{
				$current = grammarAccess.getRestTypeAccess().getWholeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRestTypeAccess().getWholeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='half'
			{
				$current = grammarAccess.getRestTypeAccess().getHalfEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRestTypeAccess().getHalfEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='quarter'
			{
				$current = grammarAccess.getRestTypeAccess().getQuarterEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRestTypeAccess().getQuarterEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='eighth'
			{
				$current = grammarAccess.getRestTypeAccess().getEighthEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRestTypeAccess().getEighthEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='sixteenth'
			{
				$current = grammarAccess.getRestTypeAccess().getSixteenthEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRestTypeAccess().getSixteenthEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='thirtysecond'
			{
				$current = grammarAccess.getRestTypeAccess().getThirtysecondEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getRestTypeAccess().getThirtysecondEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='sixtyfourth'
			{
				$current = grammarAccess.getRestTypeAccess().getSixtyfourthEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getRestTypeAccess().getSixtyfourthEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule AccidentalType
ruleAccidentalType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='sharp'
			{
				$current = grammarAccess.getAccidentalTypeAccess().getSharpEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAccidentalTypeAccess().getSharpEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='flat'
			{
				$current = grammarAccess.getAccidentalTypeAccess().getFlatEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAccidentalTypeAccess().getFlatEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='natural'
			{
				$current = grammarAccess.getAccidentalTypeAccess().getNaturalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAccidentalTypeAccess().getNaturalEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule RepetitionType
ruleRepetitionType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='left'
			{
				$current = grammarAccess.getRepetitionTypeAccess().getLeftEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRepetitionTypeAccess().getLeftEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='right'
			{
				$current = grammarAccess.getRepetitionTypeAccess().getRightEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRepetitionTypeAccess().getRightEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule NoteName
ruleNoteName returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='c'
			{
				$current = grammarAccess.getNoteNameAccess().getCEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getNoteNameAccess().getCEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='d'
			{
				$current = grammarAccess.getNoteNameAccess().getDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getNoteNameAccess().getDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='e'
			{
				$current = grammarAccess.getNoteNameAccess().getEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getNoteNameAccess().getEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='f'
			{
				$current = grammarAccess.getNoteNameAccess().getFEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getNoteNameAccess().getFEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='g'
			{
				$current = grammarAccess.getNoteNameAccess().getGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getNoteNameAccess().getGEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='a'
			{
				$current = grammarAccess.getNoteNameAccess().getAEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getNoteNameAccess().getAEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='b'
			{
				$current = grammarAccess.getNoteNameAccess().getBEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getNoteNameAccess().getBEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule NoteDuration
ruleNoteDuration returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='whole'
			{
				$current = grammarAccess.getNoteDurationAccess().getWholeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getNoteDurationAccess().getWholeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='half'
			{
				$current = grammarAccess.getNoteDurationAccess().getHalfEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getNoteDurationAccess().getHalfEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='quarter'
			{
				$current = grammarAccess.getNoteDurationAccess().getQuarterEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getNoteDurationAccess().getQuarterEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='eighth'
			{
				$current = grammarAccess.getNoteDurationAccess().getEighthEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getNoteDurationAccess().getEighthEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='sixteenth'
			{
				$current = grammarAccess.getNoteDurationAccess().getSixteenthEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getNoteDurationAccess().getSixteenthEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='thirtysecond'
			{
				$current = grammarAccess.getNoteDurationAccess().getThirtysecondEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getNoteDurationAccess().getThirtysecondEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='sixtyfourth'
			{
				$current = grammarAccess.getNoteDurationAccess().getSixtyfourthEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getNoteDurationAccess().getSixtyfourthEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule OrnamentType
ruleOrnamentType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='slide'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getSlideEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOrnamentTypeAccess().getSlideEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='glissando'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getGlissandoEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOrnamentTypeAccess().getGlissandoEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='aciaccatura'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getAciaccaturaEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOrnamentTypeAccess().getAciaccaturaEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='appoggiatura'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getAppoggiaturaEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOrnamentTypeAccess().getAppoggiaturaEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='turn'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getTurnEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getOrnamentTypeAccess().getTurnEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='mordent'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getMordentEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getOrnamentTypeAccess().getMordentEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='trill'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getTrillEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getOrnamentTypeAccess().getTrillEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule ArticulationType
ruleArticulationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='detached'
			{
				$current = grammarAccess.getArticulationTypeAccess().getDetachedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getArticulationTypeAccess().getDetachedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='legato'
			{
				$current = grammarAccess.getArticulationTypeAccess().getLegatoEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getArticulationTypeAccess().getLegatoEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='staccato'
			{
				$current = grammarAccess.getArticulationTypeAccess().getStaccatoEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getArticulationTypeAccess().getStaccatoEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='portato'
			{
				$current = grammarAccess.getArticulationTypeAccess().getPortatoEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getArticulationTypeAccess().getPortatoEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='tenuto'
			{
				$current = grammarAccess.getArticulationTypeAccess().getTenutoEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getArticulationTypeAccess().getTenutoEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='marcato'
			{
				$current = grammarAccess.getArticulationTypeAccess().getMarcatoEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getArticulationTypeAccess().getMarcatoEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule ClefType
ruleClefType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='violin'
			{
				$current = grammarAccess.getClefTypeAccess().getViolinEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getClefTypeAccess().getViolinEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='bass'
			{
				$current = grammarAccess.getClefTypeAccess().getBassEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getClefTypeAccess().getBassEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
