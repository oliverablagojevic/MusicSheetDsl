/*
 * generated by Xtext 2.21.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleComposition
entryRuleComposition
:
{ before(grammarAccess.getCompositionRule()); }
	 ruleComposition
{ after(grammarAccess.getCompositionRule()); } 
	 EOF 
;

// Rule Composition
ruleComposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionAccess().getGroup()); }
		(rule__Composition__Group__0)
		{ after(grammarAccess.getCompositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStaffElement
entryRuleStaffElement
:
{ before(grammarAccess.getStaffElementRule()); }
	 ruleStaffElement
{ after(grammarAccess.getStaffElementRule()); } 
	 EOF 
;

// Rule StaffElement
ruleStaffElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStaffElementAccess().getAlternatives()); }
		(rule__StaffElement__Alternatives)
		{ after(grammarAccess.getStaffElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBracket
entryRuleBracket
:
{ before(grammarAccess.getBracketRule()); }
	 ruleBracket
{ after(grammarAccess.getBracketRule()); } 
	 EOF 
;

// Rule Bracket
ruleBracket 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBracketAccess().getGroup()); }
		(rule__Bracket__Group__0)
		{ after(grammarAccess.getBracketAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStaff
entryRuleStaff
:
{ before(grammarAccess.getStaffRule()); }
	 ruleStaff
{ after(grammarAccess.getStaffRule()); } 
	 EOF 
;

// Rule Staff
ruleStaff 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStaffAccess().getGroup()); }
		(rule__Staff__Group__0)
		{ after(grammarAccess.getStaffAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClef
entryRuleClef
:
{ before(grammarAccess.getClefRule()); }
	 ruleClef
{ after(grammarAccess.getClefRule()); } 
	 EOF 
;

// Rule Clef
ruleClef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClefAccess().getGroup()); }
		(rule__Clef__Group__0)
		{ after(grammarAccess.getClefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeSignature
entryRuleTimeSignature
:
{ before(grammarAccess.getTimeSignatureRule()); }
	 ruleTimeSignature
{ after(grammarAccess.getTimeSignatureRule()); } 
	 EOF 
;

// Rule TimeSignature
ruleTimeSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeSignatureAccess().getGroup()); }
		(rule__TimeSignature__Group__0)
		{ after(grammarAccess.getTimeSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRest
entryRuleRest
:
{ before(grammarAccess.getRestRule()); }
	 ruleRest
{ after(grammarAccess.getRestRule()); } 
	 EOF 
;

// Rule Rest
ruleRest 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestAccess().getGroup()); }
		(rule__Rest__Group__0)
		{ after(grammarAccess.getRestAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAccidental
entryRuleAccidental
:
{ before(grammarAccess.getAccidentalRule()); }
	 ruleAccidental
{ after(grammarAccess.getAccidentalRule()); } 
	 EOF 
;

// Rule Accidental
ruleAccidental 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAccidentalAccess().getGroup()); }
		(rule__Accidental__Group__0)
		{ after(grammarAccess.getAccidentalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepetition
entryRuleRepetition
:
{ before(grammarAccess.getRepetitionRule()); }
	 ruleRepetition
{ after(grammarAccess.getRepetitionRule()); } 
	 EOF 
;

// Rule Repetition
ruleRepetition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepetitionAccess().getGroup()); }
		(rule__Repetition__Group__0)
		{ after(grammarAccess.getRepetitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNote
entryRuleNote
:
{ before(grammarAccess.getNoteRule()); }
	 ruleNote
{ after(grammarAccess.getNoteRule()); } 
	 EOF 
;

// Rule Note
ruleNote 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNoteAccess().getGroup()); }
		(rule__Note__Group__0)
		{ after(grammarAccess.getNoteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrnament
entryRuleOrnament
:
{ before(grammarAccess.getOrnamentRule()); }
	 ruleOrnament
{ after(grammarAccess.getOrnamentRule()); } 
	 EOF 
;

// Rule Ornament
ruleOrnament 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrnamentAccess().getGroup()); }
		(rule__Ornament__Group__0)
		{ after(grammarAccess.getOrnamentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArticulation
entryRuleArticulation
:
{ before(grammarAccess.getArticulationRule()); }
	 ruleArticulation
{ after(grammarAccess.getArticulationRule()); } 
	 EOF 
;

// Rule Articulation
ruleArticulation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArticulationAccess().getGroup()); }
		(rule__Articulation__Group__0)
		{ after(grammarAccess.getArticulationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BracketType
ruleBracketType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBracketTypeAccess().getAlternatives()); }
		(rule__BracketType__Alternatives)
		{ after(grammarAccess.getBracketTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RestType
ruleRestType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestTypeAccess().getAlternatives()); }
		(rule__RestType__Alternatives)
		{ after(grammarAccess.getRestTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AccidentalType
ruleAccidentalType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccidentalTypeAccess().getAlternatives()); }
		(rule__AccidentalType__Alternatives)
		{ after(grammarAccess.getAccidentalTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RepetitionType
ruleRepetitionType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepetitionTypeAccess().getAlternatives()); }
		(rule__RepetitionType__Alternatives)
		{ after(grammarAccess.getRepetitionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NoteName
ruleNoteName
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteNameAccess().getAlternatives()); }
		(rule__NoteName__Alternatives)
		{ after(grammarAccess.getNoteNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NoteDuration
ruleNoteDuration
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteDurationAccess().getAlternatives()); }
		(rule__NoteDuration__Alternatives)
		{ after(grammarAccess.getNoteDurationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule OrnamentType
ruleOrnamentType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getAlternatives()); }
		(rule__OrnamentType__Alternatives)
		{ after(grammarAccess.getOrnamentTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ArticulationType
ruleArticulationType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArticulationTypeAccess().getAlternatives()); }
		(rule__ArticulationType__Alternatives)
		{ after(grammarAccess.getArticulationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ClefType
ruleClefType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClefTypeAccess().getAlternatives()); }
		(rule__ClefType__Alternatives)
		{ after(grammarAccess.getClefTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaffElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffElementAccess().getRestParserRuleCall_0()); }
		ruleRest
		{ after(grammarAccess.getStaffElementAccess().getRestParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStaffElementAccess().getAccidentalParserRuleCall_1()); }
		ruleAccidental
		{ after(grammarAccess.getStaffElementAccess().getAccidentalParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStaffElementAccess().getRepetitionParserRuleCall_2()); }
		ruleRepetition
		{ after(grammarAccess.getStaffElementAccess().getRepetitionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStaffElementAccess().getNoteParserRuleCall_3()); }
		ruleNote
		{ after(grammarAccess.getStaffElementAccess().getNoteParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBracketTypeAccess().getCurlyEnumLiteralDeclaration_0()); }
		('curly')
		{ after(grammarAccess.getBracketTypeAccess().getCurlyEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBracketTypeAccess().getSquareEnumLiteralDeclaration_1()); }
		('square')
		{ after(grammarAccess.getBracketTypeAccess().getSquareEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestTypeAccess().getWholeEnumLiteralDeclaration_0()); }
		('whole')
		{ after(grammarAccess.getRestTypeAccess().getWholeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRestTypeAccess().getHalfEnumLiteralDeclaration_1()); }
		('half')
		{ after(grammarAccess.getRestTypeAccess().getHalfEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRestTypeAccess().getQuarterEnumLiteralDeclaration_2()); }
		('quarter')
		{ after(grammarAccess.getRestTypeAccess().getQuarterEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRestTypeAccess().getEighthEnumLiteralDeclaration_3()); }
		('eighth')
		{ after(grammarAccess.getRestTypeAccess().getEighthEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getRestTypeAccess().getSixteenthEnumLiteralDeclaration_4()); }
		('sixteenth')
		{ after(grammarAccess.getRestTypeAccess().getSixteenthEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getRestTypeAccess().getThirtysecondEnumLiteralDeclaration_5()); }
		('thirtysecond')
		{ after(grammarAccess.getRestTypeAccess().getThirtysecondEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getRestTypeAccess().getSixtyfourthEnumLiteralDeclaration_6()); }
		('sixtyfourth')
		{ after(grammarAccess.getRestTypeAccess().getSixtyfourthEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccidentalType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccidentalTypeAccess().getSharpEnumLiteralDeclaration_0()); }
		('sharp')
		{ after(grammarAccess.getAccidentalTypeAccess().getSharpEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAccidentalTypeAccess().getFlatEnumLiteralDeclaration_1()); }
		('flat')
		{ after(grammarAccess.getAccidentalTypeAccess().getFlatEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAccidentalTypeAccess().getNaturalEnumLiteralDeclaration_2()); }
		('natural')
		{ after(grammarAccess.getAccidentalTypeAccess().getNaturalEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetitionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepetitionTypeAccess().getLeftEnumLiteralDeclaration_0()); }
		('left')
		{ after(grammarAccess.getRepetitionTypeAccess().getLeftEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRepetitionTypeAccess().getRightEnumLiteralDeclaration_1()); }
		('right')
		{ after(grammarAccess.getRepetitionTypeAccess().getRightEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoteName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteNameAccess().getCEnumLiteralDeclaration_0()); }
		('c')
		{ after(grammarAccess.getNoteNameAccess().getCEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getDEnumLiteralDeclaration_1()); }
		('d')
		{ after(grammarAccess.getNoteNameAccess().getDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getEEnumLiteralDeclaration_2()); }
		('e')
		{ after(grammarAccess.getNoteNameAccess().getEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getFEnumLiteralDeclaration_3()); }
		('f')
		{ after(grammarAccess.getNoteNameAccess().getFEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getGEnumLiteralDeclaration_4()); }
		('g')
		{ after(grammarAccess.getNoteNameAccess().getGEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getAEnumLiteralDeclaration_5()); }
		('a')
		{ after(grammarAccess.getNoteNameAccess().getAEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getBEnumLiteralDeclaration_6()); }
		('b')
		{ after(grammarAccess.getNoteNameAccess().getBEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoteDuration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteDurationAccess().getWholeEnumLiteralDeclaration_0()); }
		('whole')
		{ after(grammarAccess.getNoteDurationAccess().getWholeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNoteDurationAccess().getHalfEnumLiteralDeclaration_1()); }
		('half')
		{ after(grammarAccess.getNoteDurationAccess().getHalfEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getNoteDurationAccess().getQuarterEnumLiteralDeclaration_2()); }
		('quarter')
		{ after(grammarAccess.getNoteDurationAccess().getQuarterEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getNoteDurationAccess().getEighthEnumLiteralDeclaration_3()); }
		('eighth')
		{ after(grammarAccess.getNoteDurationAccess().getEighthEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getNoteDurationAccess().getSixteenthEnumLiteralDeclaration_4()); }
		('sixteenth')
		{ after(grammarAccess.getNoteDurationAccess().getSixteenthEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getNoteDurationAccess().getThirtysecondEnumLiteralDeclaration_5()); }
		('thirtysecond')
		{ after(grammarAccess.getNoteDurationAccess().getThirtysecondEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getNoteDurationAccess().getSixtyfourthEnumLiteralDeclaration_6()); }
		('sixtyfourth')
		{ after(grammarAccess.getNoteDurationAccess().getSixtyfourthEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrnamentType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getSlideEnumLiteralDeclaration_0()); }
		('slide')
		{ after(grammarAccess.getOrnamentTypeAccess().getSlideEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getGlissandoEnumLiteralDeclaration_1()); }
		('glissando')
		{ after(grammarAccess.getOrnamentTypeAccess().getGlissandoEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getAciaccaturaEnumLiteralDeclaration_2()); }
		('aciaccatura')
		{ after(grammarAccess.getOrnamentTypeAccess().getAciaccaturaEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getAppoggiaturaEnumLiteralDeclaration_3()); }
		('appoggiatura')
		{ after(grammarAccess.getOrnamentTypeAccess().getAppoggiaturaEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getTurnEnumLiteralDeclaration_4()); }
		('turn')
		{ after(grammarAccess.getOrnamentTypeAccess().getTurnEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getMordentEnumLiteralDeclaration_5()); }
		('mordent')
		{ after(grammarAccess.getOrnamentTypeAccess().getMordentEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getTrillEnumLiteralDeclaration_6()); }
		('trill')
		{ after(grammarAccess.getOrnamentTypeAccess().getTrillEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArticulationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArticulationTypeAccess().getDetachedEnumLiteralDeclaration_0()); }
		('detached')
		{ after(grammarAccess.getArticulationTypeAccess().getDetachedEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getArticulationTypeAccess().getLegatoEnumLiteralDeclaration_1()); }
		('legato')
		{ after(grammarAccess.getArticulationTypeAccess().getLegatoEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getArticulationTypeAccess().getStaccatoEnumLiteralDeclaration_2()); }
		('staccato')
		{ after(grammarAccess.getArticulationTypeAccess().getStaccatoEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getArticulationTypeAccess().getPortatoEnumLiteralDeclaration_3()); }
		('portato')
		{ after(grammarAccess.getArticulationTypeAccess().getPortatoEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getArticulationTypeAccess().getTenutoEnumLiteralDeclaration_4()); }
		('tenuto')
		{ after(grammarAccess.getArticulationTypeAccess().getTenutoEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getArticulationTypeAccess().getMarcatoEnumLiteralDeclaration_5()); }
		('marcato')
		{ after(grammarAccess.getArticulationTypeAccess().getMarcatoEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClefType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClefTypeAccess().getViolinEnumLiteralDeclaration_0()); }
		('violin')
		{ after(grammarAccess.getClefTypeAccess().getViolinEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getClefTypeAccess().getBassEnumLiteralDeclaration_1()); }
		('bass')
		{ after(grammarAccess.getClefTypeAccess().getBassEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__0__Impl
	rule__Composition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getCompositionAction_0()); }
	()
	{ after(grammarAccess.getCompositionAccess().getCompositionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__1__Impl
	rule__Composition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getCompositionKeyword_1()); }
	'Composition'
	{ after(grammarAccess.getCompositionAccess().getCompositionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__2__Impl
	rule__Composition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getCompositionAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__3__Impl
	rule__Composition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_3()); }
	(rule__Composition__Group_3__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__4__Impl
	rule__Composition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_4()); }
	(rule__Composition__Group_4__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__5__Impl
	rule__Composition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_5()); }
	(rule__Composition__Group_5__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__6__Impl
	rule__Composition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_6()); }
	(rule__Composition__Group_6__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__7__Impl
	rule__Composition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_7()); }
	(rule__Composition__Group_7__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__8__Impl
	rule__Composition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_8()); }
	(rule__Composition__Group_8__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__9__Impl
	rule__Composition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_9()); }
	(rule__Composition__Group_9__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getRightSquareBracketKeyword_10()); }
	']'
	{ after(grammarAccess.getCompositionAccess().getRightSquareBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_3__0__Impl
	rule__Composition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getNameKeyword_3_0()); }
	'name:'
	{ after(grammarAccess.getCompositionAccess().getNameKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getNameAssignment_3_1()); }
	(rule__Composition__NameAssignment_3_1)
	{ after(grammarAccess.getCompositionAccess().getNameAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_4__0__Impl
	rule__Composition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getAuthorKeyword_4_0()); }
	'author:'
	{ after(grammarAccess.getCompositionAccess().getAuthorKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getAuthorAssignment_4_1()); }
	(rule__Composition__AuthorAssignment_4_1)
	{ after(grammarAccess.getCompositionAccess().getAuthorAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_5__0__Impl
	rule__Composition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getInstrumentKeyword_5_0()); }
	'instrument:'
	{ after(grammarAccess.getCompositionAccess().getInstrumentKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getInstrumentAssignment_5_1()); }
	(rule__Composition__InstrumentAssignment_5_1)
	{ after(grammarAccess.getCompositionAccess().getInstrumentAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_6__0__Impl
	rule__Composition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getTonalityKeyword_6_0()); }
	'tonality:'
	{ after(grammarAccess.getCompositionAccess().getTonalityKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getTonalityAssignment_6_1()); }
	(rule__Composition__TonalityAssignment_6_1)
	{ after(grammarAccess.getCompositionAccess().getTonalityAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_7__0__Impl
	rule__Composition__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getSoundTempoKeyword_7_0()); }
	'soundTempo:'
	{ after(grammarAccess.getCompositionAccess().getSoundTempoKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getSoundTempoAssignment_7_1()); }
	(rule__Composition__SoundTempoAssignment_7_1)
	{ after(grammarAccess.getCompositionAccess().getSoundTempoAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_8__0__Impl
	rule__Composition__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getBracketAssignment_8_0()); }
	(rule__Composition__BracketAssignment_8_0)
	{ after(grammarAccess.getCompositionAccess().getBracketAssignment_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_8_1()); }
	(rule__Composition__Group_8_1__0)*
	{ after(grammarAccess.getCompositionAccess().getGroup_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_8_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_8_1__0__Impl
	rule__Composition__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_8_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getCommaKeyword_8_1_0()); }
	','
	{ after(grammarAccess.getCompositionAccess().getCommaKeyword_8_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_8_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_8_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_8_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getBracketAssignment_8_1_1()); }
	(rule__Composition__BracketAssignment_8_1_1)
	{ after(grammarAccess.getCompositionAccess().getBracketAssignment_8_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_9__0__Impl
	rule__Composition__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getStaffAssignment_9_0()); }
	(rule__Composition__StaffAssignment_9_0)
	{ after(grammarAccess.getCompositionAccess().getStaffAssignment_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_9_1()); }
	(rule__Composition__Group_9_1__0)*
	{ after(grammarAccess.getCompositionAccess().getGroup_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_9_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_9_1__0__Impl
	rule__Composition__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_9_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getCommaKeyword_9_1_0()); }
	','
	{ after(grammarAccess.getCompositionAccess().getCommaKeyword_9_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_9_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_9_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_9_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getStaffAssignment_9_1_1()); }
	(rule__Composition__StaffAssignment_9_1_1)
	{ after(grammarAccess.getCompositionAccess().getStaffAssignment_9_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bracket__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bracket__Group__0__Impl
	rule__Bracket__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketAccess().getBracketAction_0()); }
	()
	{ after(grammarAccess.getBracketAccess().getBracketAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bracket__Group__1__Impl
	rule__Bracket__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketAccess().getBracketKeyword_1()); }
	'Bracket'
	{ after(grammarAccess.getBracketAccess().getBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bracket__Group__2__Impl
	rule__Bracket__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketAccess().getTypeAssignment_2()); }
	(rule__Bracket__TypeAssignment_2)?
	{ after(grammarAccess.getBracketAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bracket__Group__3__Impl
	rule__Bracket__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketAccess().getStavesAssignment_3()); }
	(rule__Bracket__StavesAssignment_3)
	{ after(grammarAccess.getBracketAccess().getStavesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bracket__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketAccess().getGroup_4()); }
	(rule__Bracket__Group_4__0)*
	{ after(grammarAccess.getBracketAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bracket__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bracket__Group_4__0__Impl
	rule__Bracket__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getBracketAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bracket__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketAccess().getStavesAssignment_4_1()); }
	(rule__Bracket__StavesAssignment_4_1)
	{ after(grammarAccess.getBracketAccess().getStavesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Staff__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__0__Impl
	rule__Staff__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getStaffAction_0()); }
	()
	{ after(grammarAccess.getStaffAccess().getStaffAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__1__Impl
	rule__Staff__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getStaffKeyword_1()); }
	'Staff'
	{ after(grammarAccess.getStaffAccess().getStaffKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__2__Impl
	rule__Staff__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getNumberAssignment_2()); }
	(rule__Staff__NumberAssignment_2)
	{ after(grammarAccess.getStaffAccess().getNumberAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__3__Impl
	rule__Staff__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getStaffAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__4__Impl
	rule__Staff__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getClefKeyword_4()); }
	'Clef:'
	{ after(grammarAccess.getStaffAccess().getClefKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__5__Impl
	rule__Staff__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getClefAssignment_5()); }
	(rule__Staff__ClefAssignment_5)
	{ after(grammarAccess.getStaffAccess().getClefAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__6__Impl
	rule__Staff__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getTimeSignatureKeyword_6()); }
	'timeSignature:'
	{ after(grammarAccess.getStaffAccess().getTimeSignatureKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__7__Impl
	rule__Staff__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getTimeAssignment_7()); }
	(rule__Staff__TimeAssignment_7)
	{ after(grammarAccess.getStaffAccess().getTimeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__8__Impl
	rule__Staff__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getElementsKeyword_8()); }
	'elements'
	{ after(grammarAccess.getStaffAccess().getElementsKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__9__Impl
	rule__Staff__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getLeftSquareBracketKeyword_9()); }
	'['
	{ after(grammarAccess.getStaffAccess().getLeftSquareBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__10__Impl
	rule__Staff__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getElementsAssignment_10()); }
	(rule__Staff__ElementsAssignment_10)
	{ after(grammarAccess.getStaffAccess().getElementsAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__11__Impl
	rule__Staff__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getGroup_11()); }
	(rule__Staff__Group_11__0)*
	{ after(grammarAccess.getStaffAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__12__Impl
	rule__Staff__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getRightSquareBracketKeyword_12()); }
	']'
	{ after(grammarAccess.getStaffAccess().getRightSquareBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getRightSquareBracketKeyword_13()); }
	']'
	{ after(grammarAccess.getStaffAccess().getRightSquareBracketKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Staff__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group_11__0__Impl
	rule__Staff__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getCommaKeyword_11_0()); }
	','
	{ after(grammarAccess.getStaffAccess().getCommaKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getElementsAssignment_11_1()); }
	(rule__Staff__ElementsAssignment_11_1)
	{ after(grammarAccess.getStaffAccess().getElementsAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Clef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clef__Group__0__Impl
	rule__Clef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClefAccess().getClefAction_0()); }
	()
	{ after(grammarAccess.getClefAccess().getClefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClefAccess().getTypeAssignment_1()); }
	(rule__Clef__TypeAssignment_1)?
	{ after(grammarAccess.getClefAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSignature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSignature__Group__0__Impl
	rule__TimeSignature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSignatureAccess().getBeatKeyword_0()); }
	'beat'
	{ after(grammarAccess.getTimeSignatureAccess().getBeatKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSignature__Group__1__Impl
	rule__TimeSignature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSignatureAccess().getBeatAssignment_1()); }
	(rule__TimeSignature__BeatAssignment_1)
	{ after(grammarAccess.getTimeSignatureAccess().getBeatAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSignature__Group__2__Impl
	rule__TimeSignature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSignatureAccess().getBeatTypeKeyword_2()); }
	'beatType'
	{ after(grammarAccess.getTimeSignatureAccess().getBeatTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSignature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSignatureAccess().getBeatTypeAssignment_3()); }
	(rule__TimeSignature__BeatTypeAssignment_3)
	{ after(grammarAccess.getTimeSignatureAccess().getBeatTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rest__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rest__Group__0__Impl
	rule__Rest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rest__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestAccess().getRestAction_0()); }
	()
	{ after(grammarAccess.getRestAccess().getRestAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rest__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rest__Group__1__Impl
	rule__Rest__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rest__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestAccess().getRestKeyword_1()); }
	'rest:'
	{ after(grammarAccess.getRestAccess().getRestKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rest__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rest__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rest__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestAccess().getTypeAssignment_2()); }
	(rule__Rest__TypeAssignment_2)?
	{ after(grammarAccess.getRestAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Accidental__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accidental__Group__0__Impl
	rule__Accidental__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Accidental__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccidentalAccess().getAccidentalAction_0()); }
	()
	{ after(grammarAccess.getAccidentalAccess().getAccidentalAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accidental__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accidental__Group__1__Impl
	rule__Accidental__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Accidental__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccidentalAccess().getAccidentalKeyword_1()); }
	'accidental:'
	{ after(grammarAccess.getAccidentalAccess().getAccidentalKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accidental__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accidental__Group__2__Impl
	rule__Accidental__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Accidental__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccidentalAccess().getTypeAssignment_2()); }
	(rule__Accidental__TypeAssignment_2)?
	{ after(grammarAccess.getAccidentalAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accidental__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accidental__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Accidental__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccidentalAccess().getPositionAssignment_3()); }
	(rule__Accidental__PositionAssignment_3)
	{ after(grammarAccess.getAccidentalAccess().getPositionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Repetition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repetition__Group__0__Impl
	rule__Repetition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repetition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetitionAccess().getRepetitionAction_0()); }
	()
	{ after(grammarAccess.getRepetitionAccess().getRepetitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repetition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repetition__Group__1__Impl
	rule__Repetition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Repetition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetitionAccess().getRepetitionKeyword_1()); }
	'repetition:'
	{ after(grammarAccess.getRepetitionAccess().getRepetitionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repetition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repetition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repetition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetitionAccess().getTypeAssignment_2()); }
	(rule__Repetition__TypeAssignment_2)?
	{ after(grammarAccess.getRepetitionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__0__Impl
	rule__Note__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getNoteAction_0()); }
	()
	{ after(grammarAccess.getNoteAccess().getNoteAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__1__Impl
	rule__Note__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getNoteKeyword_1()); }
	'note:'
	{ after(grammarAccess.getNoteAccess().getNoteKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__2__Impl
	rule__Note__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getNameAssignment_2()); }
	(rule__Note__NameAssignment_2)
	{ after(grammarAccess.getNoteAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__3__Impl
	rule__Note__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_3()); }
	(rule__Note__Group_3__0)?
	{ after(grammarAccess.getNoteAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__4__Impl
	rule__Note__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_4()); }
	(rule__Note__Group_4__0)?
	{ after(grammarAccess.getNoteAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__5__Impl
	rule__Note__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_5()); }
	(rule__Note__Group_5__0)?
	{ after(grammarAccess.getNoteAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__6__Impl
	rule__Note__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_6()); }
	(rule__Note__Group_6__0)?
	{ after(grammarAccess.getNoteAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__7__Impl
	rule__Note__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getOrnamentAssignment_7()); }
	(rule__Note__OrnamentAssignment_7)?
	{ after(grammarAccess.getNoteAccess().getOrnamentAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__8__Impl
	rule__Note__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getAccidentalAssignment_8()); }
	(rule__Note__AccidentalAssignment_8)?
	{ after(grammarAccess.getNoteAccess().getAccidentalAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__9__Impl
	rule__Note__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getArticulationAssignment_9()); }
	(rule__Note__ArticulationAssignment_9)?
	{ after(grammarAccess.getNoteAccess().getArticulationAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__10__Impl
	rule__Note__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getFermataAssignment_10()); }
	(rule__Note__FermataAssignment_10)?
	{ after(grammarAccess.getNoteAccess().getFermataAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getDotAssignment_11()); }
	(rule__Note__DotAssignment_11)?
	{ after(grammarAccess.getNoteAccess().getDotAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_3__0__Impl
	rule__Note__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getLyricsKeyword_3_0()); }
	'lyrics:'
	{ after(grammarAccess.getNoteAccess().getLyricsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getLyricsAssignment_3_1()); }
	(rule__Note__LyricsAssignment_3_1)
	{ after(grammarAccess.getNoteAccess().getLyricsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_4__0__Impl
	rule__Note__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getDurationKeyword_4_0()); }
	'duration:'
	{ after(grammarAccess.getNoteAccess().getDurationKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getDurationAssignment_4_1()); }
	(rule__Note__DurationAssignment_4_1)
	{ after(grammarAccess.getNoteAccess().getDurationAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_5__0__Impl
	rule__Note__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getPositionKeyword_5_0()); }
	'position:'
	{ after(grammarAccess.getNoteAccess().getPositionKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getPositionAssignment_5_1()); }
	(rule__Note__PositionAssignment_5_1)
	{ after(grammarAccess.getNoteAccess().getPositionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_6__0__Impl
	rule__Note__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getDynamicKeyword_6_0()); }
	'dynamic:'
	{ after(grammarAccess.getNoteAccess().getDynamicKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getDynamicAssignment_6_1()); }
	(rule__Note__DynamicAssignment_6_1)
	{ after(grammarAccess.getNoteAccess().getDynamicAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ornament__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ornament__Group__0__Impl
	rule__Ornament__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ornament__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrnamentAccess().getOrnamentAction_0()); }
	()
	{ after(grammarAccess.getOrnamentAccess().getOrnamentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ornament__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ornament__Group__1__Impl
	rule__Ornament__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ornament__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrnamentAccess().getOrnamentKeyword_1()); }
	'ornament:'
	{ after(grammarAccess.getOrnamentAccess().getOrnamentKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ornament__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ornament__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ornament__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrnamentAccess().getTypeAssignment_2()); }
	(rule__Ornament__TypeAssignment_2)?
	{ after(grammarAccess.getOrnamentAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Articulation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Articulation__Group__0__Impl
	rule__Articulation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Articulation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArticulationAccess().getArticulationAction_0()); }
	()
	{ after(grammarAccess.getArticulationAccess().getArticulationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Articulation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Articulation__Group__1__Impl
	rule__Articulation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Articulation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArticulationAccess().getArticulationKeyword_1()); }
	'articulation:'
	{ after(grammarAccess.getArticulationAccess().getArticulationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Articulation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Articulation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Articulation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArticulationAccess().getTypeAssignment_2()); }
	(rule__Articulation__TypeAssignment_2)?
	{ after(grammarAccess.getArticulationAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__NameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getNameEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getCompositionAccess().getNameEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__AuthorAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getAuthorEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getCompositionAccess().getAuthorEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__InstrumentAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getInstrumentEStringParserRuleCall_5_1_0()); }
		ruleEString
		{ after(grammarAccess.getCompositionAccess().getInstrumentEStringParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__TonalityAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getTonalityEStringParserRuleCall_6_1_0()); }
		ruleEString
		{ after(grammarAccess.getCompositionAccess().getTonalityEStringParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__SoundTempoAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getSoundTempoEIntParserRuleCall_7_1_0()); }
		ruleEInt
		{ after(grammarAccess.getCompositionAccess().getSoundTempoEIntParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__BracketAssignment_8_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getBracketBracketParserRuleCall_8_0_0()); }
		ruleBracket
		{ after(grammarAccess.getCompositionAccess().getBracketBracketParserRuleCall_8_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__BracketAssignment_8_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getBracketBracketParserRuleCall_8_1_1_0()); }
		ruleBracket
		{ after(grammarAccess.getCompositionAccess().getBracketBracketParserRuleCall_8_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__StaffAssignment_9_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getStaffStaffParserRuleCall_9_0_0()); }
		ruleStaff
		{ after(grammarAccess.getCompositionAccess().getStaffStaffParserRuleCall_9_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__StaffAssignment_9_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getStaffStaffParserRuleCall_9_1_1_0()); }
		ruleStaff
		{ after(grammarAccess.getCompositionAccess().getStaffStaffParserRuleCall_9_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBracketAccess().getTypeBracketTypeEnumRuleCall_2_0()); }
		ruleBracketType
		{ after(grammarAccess.getBracketAccess().getTypeBracketTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__StavesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBracketAccess().getStavesStaffParserRuleCall_3_0()); }
		ruleStaff
		{ after(grammarAccess.getBracketAccess().getStavesStaffParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracket__StavesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBracketAccess().getStavesStaffParserRuleCall_4_1_0()); }
		ruleStaff
		{ after(grammarAccess.getBracketAccess().getStavesStaffParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__NumberAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getNumberEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getStaffAccess().getNumberEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__ClefAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getClefClefParserRuleCall_5_0()); }
		ruleClef
		{ after(grammarAccess.getStaffAccess().getClefClefParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__TimeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getTimeTimeSignatureParserRuleCall_7_0()); }
		ruleTimeSignature
		{ after(grammarAccess.getStaffAccess().getTimeTimeSignatureParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__ElementsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getElementsStaffElementParserRuleCall_10_0()); }
		ruleStaffElement
		{ after(grammarAccess.getStaffAccess().getElementsStaffElementParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__ElementsAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getElementsStaffElementParserRuleCall_11_1_0()); }
		ruleStaffElement
		{ after(grammarAccess.getStaffAccess().getElementsStaffElementParserRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clef__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClefAccess().getTypeClefTypeEnumRuleCall_1_0()); }
		ruleClefType
		{ after(grammarAccess.getClefAccess().getTypeClefTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__BeatAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSignatureAccess().getBeatEIntParserRuleCall_1_0()); }
		ruleEInt
		{ after(grammarAccess.getTimeSignatureAccess().getBeatEIntParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__BeatTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSignatureAccess().getBeatTypeEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getTimeSignatureAccess().getBeatTypeEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rest__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestAccess().getTypeRestTypeEnumRuleCall_2_0()); }
		ruleRestType
		{ after(grammarAccess.getRestAccess().getTypeRestTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accidental__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccidentalAccess().getTypeAccidentalTypeEnumRuleCall_2_0()); }
		ruleAccidentalType
		{ after(grammarAccess.getAccidentalAccess().getTypeAccidentalTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accidental__PositionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccidentalAccess().getPositionEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getAccidentalAccess().getPositionEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repetition__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepetitionAccess().getTypeRepetitionTypeEnumRuleCall_2_0()); }
		ruleRepetitionType
		{ after(grammarAccess.getRepetitionAccess().getTypeRepetitionTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getNameNoteNameEnumRuleCall_2_0()); }
		ruleNoteName
		{ after(grammarAccess.getNoteAccess().getNameNoteNameEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__LyricsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getLyricsEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getNoteAccess().getLyricsEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__DurationAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getDurationNoteDurationEnumRuleCall_4_1_0()); }
		ruleNoteDuration
		{ after(grammarAccess.getNoteAccess().getDurationNoteDurationEnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__PositionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getPositionEIntParserRuleCall_5_1_0()); }
		ruleEInt
		{ after(grammarAccess.getNoteAccess().getPositionEIntParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__DynamicAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getDynamicEStringParserRuleCall_6_1_0()); }
		ruleEString
		{ after(grammarAccess.getNoteAccess().getDynamicEStringParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__OrnamentAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getOrnamentOrnamentParserRuleCall_7_0()); }
		ruleOrnament
		{ after(grammarAccess.getNoteAccess().getOrnamentOrnamentParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__AccidentalAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getAccidentalAccidentalParserRuleCall_8_0()); }
		ruleAccidental
		{ after(grammarAccess.getNoteAccess().getAccidentalAccidentalParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__ArticulationAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getArticulationArticulationParserRuleCall_9_0()); }
		ruleArticulation
		{ after(grammarAccess.getNoteAccess().getArticulationArticulationParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__FermataAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getFermataFermataKeyword_10_0()); }
		(
			{ before(grammarAccess.getNoteAccess().getFermataFermataKeyword_10_0()); }
			'fermata'
			{ after(grammarAccess.getNoteAccess().getFermataFermataKeyword_10_0()); }
		)
		{ after(grammarAccess.getNoteAccess().getFermataFermataKeyword_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__DotAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getDotDotKeyword_11_0()); }
		(
			{ before(grammarAccess.getNoteAccess().getDotDotKeyword_11_0()); }
			'dot'
			{ after(grammarAccess.getNoteAccess().getDotDotKeyword_11_0()); }
		)
		{ after(grammarAccess.getNoteAccess().getDotDotKeyword_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ornament__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrnamentAccess().getTypeOrnamentTypeEnumRuleCall_2_0()); }
		ruleOrnamentType
		{ after(grammarAccess.getOrnamentAccess().getTypeOrnamentTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Articulation__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArticulationAccess().getTypeArticulationTypeEnumRuleCall_2_0()); }
		ruleArticulationType
		{ after(grammarAccess.getArticulationAccess().getTypeArticulationTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
